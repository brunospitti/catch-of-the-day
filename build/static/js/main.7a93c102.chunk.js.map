{"version":3,"sources":["helpers.js","components/StorePicker.js","base.js","sample-fishes.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","components/Inventory.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","e","preventDefault","storeName","_this","value","props","history","push","react_default","a","createElement","Fragment","className","onSubmit","this","type","required","placeholder","defaultValue","ref","Component","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","base","Rebase","createClass","database","fishes","fish1","name","image","desc","price","status","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Header","tagline","Order","renderOrder","key","fish","count","order","isAvailable","transitionOption","classNames","timeout","enter","exit","react_transition_group","component","onClick","removeFromOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseInt","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","objectSpread","defineProperty","updateFish","index","_this$props$fish","onChange","deleteFish","Login","authenticate","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","Fish","_this$props$details","details","src","alt","disabled","addToOrder","App","fishesState","Date","now","sampleFishes","orderState","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","es","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.7a93c102.chunk.js","sourcesContent":["export function formatPrice(cents) {\r\n  return (cents / 100).toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\"\r\n  });\r\n}\r\n\r\nexport function rando(arr) {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nexport function slugify(text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, \"-\")\r\n    .replace(/[^\\w-]+/g, \"\")\r\n    .replace(/--+/g, \"-\")\r\n    .replace(/^-+/, \"\")\r\n    .replace(/-+$/, \"\");\r\n}\r\n\r\nexport function getFunName() {\r\n  const adjectives = [\r\n    \"adorable\",\r\n    \"beautiful\",\r\n    \"clean\",\r\n    \"drab\",\r\n    \"elegant\",\r\n    \"fancy\",\r\n    \"glamorous\",\r\n    \"handsome\",\r\n    \"long\",\r\n    \"magnificent\",\r\n    \"old-fashioned\",\r\n    \"plain\",\r\n    \"quaint\",\r\n    \"sparkling\",\r\n    \"ugliest\",\r\n    \"unsightly\",\r\n    \"angry\",\r\n    \"bewildered\",\r\n    \"clumsy\",\r\n    \"defeated\",\r\n    \"embarrassed\",\r\n    \"fierce\",\r\n    \"grumpy\",\r\n    \"helpless\",\r\n    \"itchy\",\r\n    \"jealous\",\r\n    \"lazy\",\r\n    \"mysterious\",\r\n    \"nervous\",\r\n    \"obnoxious\",\r\n    \"panicky\",\r\n    \"repulsive\",\r\n    \"scary\",\r\n    \"thoughtless\",\r\n    \"uptight\",\r\n    \"worried\"\r\n  ];\r\n\r\n  const nouns = [\r\n    \"women\",\r\n    \"men\",\r\n    \"children\",\r\n    \"teeth\",\r\n    \"feet\",\r\n    \"people\",\r\n    \"leaves\",\r\n    \"mice\",\r\n    \"geese\",\r\n    \"halves\",\r\n    \"knives\",\r\n    \"wives\",\r\n    \"lives\",\r\n    \"elves\",\r\n    \"loaves\",\r\n    \"potatoes\",\r\n    \"tomatoes\",\r\n    \"cacti\",\r\n    \"foci\",\r\n    \"fungi\",\r\n    \"nuclei\",\r\n    \"syllabuses\",\r\n    \"analyses\",\r\n    \"diagnoses\",\r\n    \"oases\",\r\n    \"theses\",\r\n    \"crises\",\r\n    \"phenomena\",\r\n    \"criteria\",\r\n    \"data\"\r\n  ];\r\n\r\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getFunName } from '../helpers';\r\n\r\nclass StorePicker extends React.Component {\r\n\r\n    static propTypes = {\r\n        history: PropTypes.object\r\n    }\r\n\r\n    myInput = React.createRef();\r\n\r\n    goToStore = e => {\r\n        // 1. Stop the form from submitting\r\n        e.preventDefault();\r\n        // 2. Get the text from that input\r\n        const storeName = (this.myInput.value.value);\r\n        // 3. Change the page to '/store/input-value'\r\n        this.props.history.push(`/store/${storeName}`);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            // React.Fragment is used to wrap multiple sibling tags but it's not rendered on the page, so it keeps a clean HTML structure\r\n            <React.Fragment>\r\n                {/* comment in jsx */}\r\n                {/* <p>Sibling tag using React.Fragment</p> */}\r\n                <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n                    <h2>Please enter a store</h2>\r\n                    <input \r\n                        type=\"text\"\r\n                        required\r\n                        placeholder=\"Store name\"\r\n                        defaultValue={getFunName()}\r\n                        ref={this.myInput}\r\n                    />\r\n                    <button type=\"submit\">Visit store</button>\r\n                </form>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StorePicker;","// React - firebase\r\nimport Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyDpjCDuVevJZAnn9EbBS-Ohy4ZjKcre07Q\",\r\n    authDomain: \"catch-of-the-day-bruno-spitti.firebaseapp.com\",\r\n    databaseURL: \"https://catch-of-the-day-bruno-spitti.firebaseio.com\",\r\n    // don't need these below, but I'll keep them just for reference\r\n    projectId: \"catch-of-the-day-bruno-spitti\",\r\n    storageBucket: \"catch-of-the-day-bruno-spitti.appspot.com\",\r\n    messagingSenderId: \"217264808093\"\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n// This is a named export\r\nexport { firebaseApp };\r\n\r\n// This is a default export\r\nexport default base;","// This is just some sample data so you don't have to think of your own!\r\nconst fishes = {\r\n  fish1: {\r\n    name: \"Pacific Halibut\",\r\n    image: \"/images/hali.jpg\",\r\n    desc:\r\n      \"Everyones favorite white fish. We will cut it to the size you need and ship it.\",\r\n    price: 1724,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish2: {\r\n    name: \"Lobster\",\r\n    image: \"/images/lobster.jpg\",\r\n    desc:\r\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\r\n    price: 3200,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish3: {\r\n    name: \"Sea Scallops\",\r\n    image: \"/images/scallops.jpg\",\r\n    desc:\r\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\r\n    price: 1684,\r\n    status: \"unavailable\"\r\n  },\r\n\r\n  fish4: {\r\n    name: \"Mahi Mahi\",\r\n    image: \"/images/mahi.jpg\",\r\n    desc:\r\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\r\n    price: 1129,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish5: {\r\n    name: \"King Crab\",\r\n    image: \"/images/crab.jpg\",\r\n    desc:\r\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\r\n    price: 4234,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish6: {\r\n    name: \"Atlantic Salmon\",\r\n    image: \"/images/salmon.jpg\",\r\n    desc:\r\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\r\n    price: 1453,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish7: {\r\n    name: \"Oysters\",\r\n    image: \"/images/oysters.jpg\",\r\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\r\n    price: 2543,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish8: {\r\n    name: \"Mussels\",\r\n    image: \"/images/mussels.jpg\",\r\n    desc:\r\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\r\n    price: 425,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish9: {\r\n    name: \"Jumbo Prawns\",\r\n    image: \"/images/prawns.jpg\",\r\n    desc:\r\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\r\n    price: 2250,\r\n    status: \"available\"\r\n  }\r\n};\r\n\r\nexport default fishes;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = props => (\r\n    <header className=\"top\">\r\n        {/* weird styling made by wesbos */}\r\n        <h1>Catch\r\n            <span className=\"ofThe\">\r\n                <span className=\"of\">of</span>\r\n                <span className=\"the\">the</span>\r\n            </span> \r\n            day\r\n        </h1>\r\n        <h3 className=\"tagline\">\r\n            <span>{ props.tagline }</span>\r\n        </h3>\r\n    </header>\r\n);\r\n\r\n// checking if the type of props is the expected\r\n// as Header is a stateless component, this has to go after the const\r\nHeader.propTypes = {\r\n    tagline: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nimport { formatPrice } from '../helpers';\r\n\r\n\r\nclass Order extends React.Component {\r\n\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        order: PropTypes.object,\r\n        removeFromOrder: PropTypes.func\r\n    }\r\n\r\n    // function to clean the map inside of the return\r\n    renderOrder = (key) => {\r\n        // what fish\r\n        const fish = this.props.fishes[key];\r\n        // what quantity\r\n        const count = this.props.order[key];\r\n        const isAvailable = fish && fish.status === 'available';\r\n        const transitionOption = {\r\n            classNames: \"order\",\r\n            key: key,\r\n            timeout: {enter:500, exit:500}\r\n        }\r\n\r\n        //make sure the fish is loaded before printing the order on the page\r\n        if (!fish) return null;\r\n\r\n        if(!isAvailable){\r\n            return (\r\n                // instead of writting the properties of CSSTransition, this was set on the top as an object and spread here and the one below\r\n                <CSSTransition {...transitionOption}>\r\n                    <li key={key}>\r\n                        Sorry {fish ? fish.name : 'fish'} is no longer available\r\n                    </li>\r\n                </CSSTransition>\r\n            );\r\n        }\r\n        return (\r\n            \r\n            <CSSTransition {...transitionOption}>\r\n                <li key={key}>\r\n                    <span>\r\n                        <TransitionGroup component=\"span\" className=\"count\">\r\n                            <CSSTransition classNames=\"count\" key={ count } timeout={ {enter:500, exit:500} }>\r\n                                <span>{ count }</span>\r\n                            </CSSTransition>\r\n                        </TransitionGroup>\r\n                        lbs {fish.name}\r\n                        <span>{formatPrice(count * fish.price)}</span>\r\n                        <button className=\"delete\" onClick={ () => this.props.removeFromOrder(key) }>&times;</button>\r\n                    </span>\r\n                </li>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        //creating some consts that will be needed to display the correct total and fishes\r\n        //what fish is in the order [fish', fish3, etc]\r\n        const orderIds = Object.keys(this.props.order);\r\n        // function to sum up the total price of the order\r\n        const total = orderIds.reduce((prevTotal, key) => {\r\n            const fish = this.props.fishes[key];\r\n            const count = this.props.order[key];\r\n            // if it's available\r\n            const isAvailable = fish && fish.status === 'available';\r\n            if(isAvailable){\r\n                return prevTotal + (count * fish.price);\r\n            }\r\n            return prevTotal;\r\n            //starting amount is 0\r\n        }, 0);\r\n\r\n        return(\r\n            <div className=\"order-wrap\">\r\n                <h2>Your Order</h2>\r\n                {/* Animation - instead of an <ul> tag, we'll be using the TransitionGroup with a component=\"ul\" */}\r\n                <TransitionGroup component=\"ul\" className=\"order\">\r\n                    { orderIds.map(this.renderOrder) }\r\n                </TransitionGroup>\r\n                <div className=\"total\">\r\n                    Total:\r\n                    <strong>{ formatPrice(total) }</strong>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Order;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddFishForm extends React.Component {\r\n    nameRef = React.createRef();\r\n    priceRef = React.createRef();\r\n    statusRef = React.createRef();\r\n    descRef = React.createRef();\r\n    imageRef = React.createRef();\r\n    \r\n    static propTypes = {\r\n        addFish: PropTypes.func\r\n    }\r\n\r\n    createFish = e => {\r\n        e.preventDefault();\r\n        const fish = {\r\n            name: this.nameRef.value.value,\r\n            price: parseInt(this.priceRef.value.value, 0),\r\n            status: this.statusRef.value.value,\r\n            desc: this.descRef.value.value,\r\n            image: this.imageRef.value.value\r\n        }\r\n        this.props.addFish(fish);\r\n\r\n        // refresh the form\r\n        e.currentTarget.reset();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <form className=\"fish-edit\" onSubmit={ this.createFish }>\r\n                <input\r\n                    name=\"name\"\r\n                    ref={ this.nameRef }\r\n                    type=\"text\"\r\n                    placeholder=\"Name\" \r\n                />\r\n                <input\r\n                    name=\"price\"\r\n                    ref={ this.priceRef }\r\n                    type=\"text\"\r\n                    placeholder=\"Price\" \r\n                />\r\n                <select\r\n                    name=\"status\"\r\n                    ref={ this.statusRef } >\r\n                    <option value=\"available\">Fresh</option>\r\n                    <option value=\"unavailable\">Sold out!</option>\r\n                </select>\r\n                <textarea\r\n                    name=\"desc\"\r\n                    ref={ this.descRef }\r\n                    placeholder=\"Desc\">\r\n                </textarea>\r\n                <input\r\n                    name=\"image\"\r\n                    ref={ this.imageRef }\r\n                    type=\"text\"\r\n                    placeholder=\"Image URL\"\r\n                />\r\n                <button type=\"submit\">Add fish</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddFishForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass EditFishForm extends React.Component {\r\n\r\n    static propTypes = {\r\n        fish: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            price: PropTypes.number,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n        }),\r\n        updateFish: PropTypes.func,\r\n        index: PropTypes.string,\r\n        deleteFish: PropTypes.func\r\n    };\r\n\r\n    handleChange = e => {\r\n        // update that fish\r\n        if(e.currentTarget.name === 'price'){\r\n            // 1. Take a copy of the current fish\r\n            const updatedFish = {\r\n                ...this.props.fish,\r\n\r\n                //computed property name\r\n                [e.currentTarget.name]: parseInt( e.currentTarget.value, 0 )\r\n            };\r\n            this.props.updateFish(this.props.index, updatedFish);\r\n        } else {\r\n            // 1. Take a copy of the current fish\r\n            const updatedFish = {\r\n                ...this.props.fish,\r\n\r\n                //computed property name\r\n                [e.currentTarget.name]: e.currentTarget.value\r\n            };\r\n            this.props.updateFish(this.props.index, updatedFish);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        // destructuring the props to only call the param I need, instead of 'this.props.fish.whatever' every time\r\n        const {image, name, price, desc, status} = this.props.fish;\r\n\r\n        return(\r\n            <div className=\"fish-edit\">\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    onChange={ this.handleChange }\r\n                    value={ name }\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"price\"\r\n                    onChange={ this.handleChange }\r\n                    value={ price }\r\n                />\r\n                <select\r\n                    name=\"status\"\r\n                    onChange={ this.handleChange }\r\n                    value={ status }>\r\n                    <option value=\"available\">Fresh</option>\r\n                    <option value=\"unavailable\">Sold out!</option>\r\n                </select>\r\n                <textarea\r\n                    name=\"desc\"\r\n                    onChange={ this.handleChange }\r\n                    value={ desc }>\r\n                </textarea>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"image\"\r\n                    onChange={ this.handleChange }\r\n                    value={ image }\r\n                />\r\n                <button onClick={ () => this.props.deleteFish(this.props.index) }>Remove fish</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditFishForm;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = props => (\r\n    <nav className=\"login\">\r\n        <h2>Inventory Login</h2>\r\n        <p>Sign in to manage your store's inventory.</p>\r\n        <button className=\"github\"\r\n                onClick={() => props.authenticate(\"Github\")}\r\n        >\r\n            Log in with Github\r\n        </button>\r\n        <button className=\"facebook\"\r\n                onClick={() => props.authenticate(\"Facebook\")}\r\n        >\r\n            Log in with Facebook\r\n        </button>\r\n    </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n    authenticate: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport firebase from 'firebase';\r\nimport base, { firebaseApp } from '../base';\r\n\r\nimport AddFishForm from './AddFishForm';\r\nimport EditFishForm from './EditFishForm';\r\nimport Login from './Login';\r\n\r\nclass Inventory extends React.Component {\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        updateFish: PropTypes.func,\r\n        deleteFish: PropTypes.func,\r\n        addFish: PropTypes.func,\r\n        loadSampleFishes: PropTypes.func\r\n    };\r\n\r\n    state = {\r\n        uid: null,\r\n        owner: null\r\n    };\r\n\r\n    // everytime we load the page, firebase will se if we're logged in and authenticated\r\n    // if it's true, it will bring the user, do all the checks and log in if everything's right\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if(user) {\r\n                this.authHandler({ user });\r\n            }\r\n        });\r\n    };\r\n\r\n    authHandler = async (authData) => {\r\n        // 1. Look up the current store in the firebase database\r\n        const store = await base.fetch(this.props.storeId, { context: this });\r\n        \r\n        // 2. Claim it if there's no owner\r\n        if (!store.owner) {\r\n            await base.post( `${ this.props.storeId }/owner`, {\r\n                data: authData.user.uid\r\n            })\r\n        }\r\n\r\n        // 3. Set the state of the inventory component to reflect the current user\r\n        this.setState({\r\n            uid: authData.user.uid,\r\n            owner: store.owner || authData.user.uid\r\n        })\r\n    };\r\n\r\n    authenticate = provider => {\r\n        // normally it would be like new firebase.auth.FacebookAuthProvider()\r\n        // but as it's a variable, this method below is used\r\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n        firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler)\r\n    };\r\n\r\n    logout = async () => {\r\n        await firebase.auth().signOut();\r\n        this.setState({ uid: null });\r\n    };\r\n\r\n    render(){\r\n\r\n        const logout = <button onClick={ this.logout }>Log out!</button>;\r\n\r\n        // 1. Check if they are logged in\r\n        if (!this.state.uid) {\r\n            return(\r\n                <Login authenticate={ this.authenticate }/>\r\n            )\r\n        }\r\n\r\n        // 2. Check if they are not the owner of the store\r\n        if (this.state.uid !== this.state.owner){\r\n            return (\r\n                <div>\r\n                    <p>Sorry you're not the owner! :(</p>\r\n                    { logout }\r\n                </div>\r\n            )\r\n        }\r\n\r\n        // 3. They must be the owner, render inventory\r\n        return(\r\n            <div className=\"inventory\">\r\n                <h2>Inventory</h2>\r\n                { logout }\r\n                {Object.keys(this.props.fishes).map(\r\n                    fish => <EditFishForm \r\n                                key={ fish }\r\n                                index={ fish }\r\n                                fish={ this.props.fishes[fish] }\r\n                                updateFish={ this.props.updateFish }\r\n                                deleteFish={ this.props.deleteFish }\r\n                            />\r\n                )}\r\n                <AddFishForm addFish={ this.props.addFish } />\r\n                <button\r\n                    onClick={ this.props.loadSampleFishes }>\r\n                    Load sample Fishes\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Inventory;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { formatPrice } from '../helpers';\r\n\r\nclass Fish extends React.Component {\r\n    static propTypes = {\r\n        // as details is an object, I'd like to check all of the properties of the object, and not just if details is an object\r\n        // that's why I opted for a PropTypes.shape\r\n        details: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            price: PropTypes.number,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string\r\n        }),\r\n        addToOrder: PropTypes.func,\r\n        index: PropTypes.string\r\n    }\r\n    render(){\r\n        // destructuring the props to only call the param I need, instead of 'this.props.details.whatever' every time\r\n        const {image, name, price, desc, status} = this.props.details;\r\n        // will return true or false\r\n        const isAvailable = status === 'available';\r\n        return(\r\n            <li className=\"menu-fish\">\r\n                <img src={ image } alt={ name }/>\r\n                <h3 className=\"fish-name\">\r\n                    { name }\r\n                    <span className=\"price\">{ formatPrice(price) }</span>\r\n                </h3>\r\n                <p>{ desc }</p>\r\n                <button\r\n                    // only disabled when NOT available\r\n                    disabled={ !isAvailable }\r\n                    // on click, call addToOrder passing the index as parameter\r\n                    onClick={() => this.props.addToOrder(this.props.index)}>\r\n                    {/* text depends on availability */}\r\n                    {isAvailable ? 'Add to Order' : 'Sold out!'}\r\n                </button>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Fish;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport base from '../base';\r\nimport sampleFishes from '../sample-fishes';\r\n\r\nimport Header from './Header';\r\nimport Order from './Order';\r\nimport Inventory from './Inventory';\r\nimport Fish from './Fish';\r\n\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        fishes: {},\r\n        order: {}\r\n    };\r\n\r\n    static propTypes = {\r\n        match: PropTypes.object\r\n    }\r\n\r\n    // sync the state of fishes as soon as App mounts using the store name as the first param on the database\r\n    componentDidMount() {\r\n        const { params } = this.props.match;\r\n        // first reinstate our localStorage so that it gets the data back to localStorage\r\n        const localStorageRef = localStorage.getItem(params.storeId);\r\n        // if there is a localStorage, set the state of order to the one on the localStorage\r\n        // parsing the string of the object, to an object again\r\n        if(localStorageRef){\r\n            this.setState({ order: JSON.parse(localStorageRef)});\r\n        };\r\n        \r\n        // reference to a piece of data in firebase's database\r\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n            context: this,\r\n            state: 'fishes'\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // adding item of name 'store name' and value of 'order' object\r\n        // transforming the object into a string, as the localStorage doesn't accept object as value\r\n        localStorage.setItem( this.props.match.params.storeId, JSON.stringify(this.state.order) );\r\n    }\r\n\r\n    // remove the link from state to that specific store when user leaves the page\r\n    componentWillUnmount() {\r\n        base.removeBinding(this.ref);\r\n    }\r\n\r\n    addFish = fish => {\r\n        // 1. Take a copy of the existing state\r\n        let fishesState = {...this.state.fishes};\r\n        // 2. Add our new fish to copy of state\r\n        fishesState[`fish${Date.now()}`] = fish;\r\n        // 3. Set the new fishesState to state\r\n        this.setState({ fishes: fishesState });\r\n    };\r\n\r\n    updateFish = (fish, updatedFish) => {\r\n        // 1. Take a copy of the existing state\r\n        let fishesState = {...this.state.fishes};\r\n        // 2. Update that state\r\n        fishesState[fish] = updatedFish;\r\n        // 3. Set that to state\r\n        this.setState({ fishes: fishesState });\r\n    }\r\n\r\n    deleteFish = fish => {\r\n        // 1. Take a copy of the existing state\r\n        let fishesState = {...this.state.fishes};\r\n        // 2. Update that state\r\n        // For firebase to be able to delete, I had to set the fish to null\r\n        fishesState[fish] = null;\r\n        // 3. Set that to state\r\n        this.setState({ fishes: fishesState });\r\n    }\r\n\r\n    loadSampleFishes = () => {\r\n        this.setState({ fishes: sampleFishes });\r\n    }\r\n\r\n    addToOrder = fish => {\r\n        // 1. Take a copy of the existing state\r\n        let orderState = {...this.state.order};\r\n        // 2. Either add to order, or update the number in the order\r\n        orderState[fish] = orderState[fish] + 1 || 1;\r\n        // 3. Set the new orderState to state\r\n        this.setState({ order: orderState });\r\n    }\r\n\r\n    removeFromOrder = fish => {\r\n        // 1. Take a copy of the existing state\r\n        let orderState = {...this.state.order};\r\n        // 2. Remove that item from order\r\n        // delete object property method from js\r\n        delete orderState[fish];\r\n        // 3. Set the new orderState to state\r\n        this.setState({ order: orderState });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"catch-of-the-day\">\r\n                <div className=\"menu\">\r\n                    <Header tagline=\"Fresh seafood market\"/>\r\n                    <ul className=\"fishes\">\r\n                        {/* gets each key of an object so I can map through it as an Array */}\r\n                        {Object.keys(this.state.fishes).map(\r\n                            fish => <Fish \r\n                                        key={ fish }\r\n                                        index={ fish }\r\n                                        details={ this.state.fishes[fish] }\r\n                                        addToOrder={ this.addToOrder }\r\n                                    />\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n                <Order\r\n                    fishes={ this.state.fishes }\r\n                    order={ this.state.order }\r\n                    removeFromOrder={ this.removeFromOrder }\r\n                />\r\n                <Inventory\r\n                    updateFish={ this.updateFish }\r\n                    fishes={ this.state.fishes }\r\n                    addFish={ this.addFish }\r\n                    deleteFish={ this.deleteFish }\r\n                    loadSampleFishes={ this.loadSampleFishes }\r\n                    storeId={ this.props.match.params.storeId }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nconst NotFound = props => (\r\n    <div>\r\n        <h2>Not Found!?!?1@?1?1</h2>\r\n    </div>\r\n);\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport StorePicker from './StorePicker';\r\nimport App from './App';\r\nimport NotFound from './NotFound';\r\n\r\nconst Router = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            {/* homepage */}\r\n            <Route exact path=\"/\" component={StorePicker} />\r\n            <Route exact path=\"/store/:storeId\" component={App} />\r\n            {/* 404 */}\r\n            <Route component={NotFound}/>\r\n        </Switch>\r\n    </BrowserRouter>\r\n)\r\n\r\nexport default Router;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport './css/style.css';\r\n\r\nimport Router from './components/Router';\r\n\r\n// only Render is needed to render, since it's the component that renders everything else\r\nrender(<Router/>, document.querySelector('#main'));"],"sourceRoot":""}